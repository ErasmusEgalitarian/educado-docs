{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation","text":"<p>Welcome to the Educado documentation! Here, you will find all the essential information about the project, from an overview to technical and configuration details.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"Section Subsection Link Project Overview In Construction Vision &amp; Objectives Project Vision In Construction Project Objectives In Construction Stakeholders Stakeholders Product Product Overview In Construction Product Backlog In Construction MVPs In Construction Management Roadmap Roadmap Workflow Workflow Issue Tracking &amp; Task Management Issue Tracking Project Deliverables Project Deliverables Meeting Minutes March 27, 2025 April 10, 2025 Lessons Learned In Construction Development Software Development Lifecycle In Construction Technical Documentation API Documentation In Construction System Architecture In Construction Database Schema In Construction Tools &amp; Dependencies In Construction Section Subsection Link Setup &amp; Configuration MkDocs MkDocs Configuration MkDocs Configuration Python Virtual Environment Python Virtual Environment Publishing Guide Publishing Guide README README Section Subsection Link References References <p>Note: Sections marked as In Construction will be available in future versions of the documentation.</p>"},{"location":"#revision-history","title":"Revision History","text":"Date Version Changes Authors 2025-03-28 0.1 Document creation Lucas Antunes"},{"location":"references/","title":"References","text":"<p>\u2190 Back to Main Page</p> <ol> <li>Leffingwell, D., Widrig, D., Managing Software Requirements: A Use Case Approach, 2nd Edition, Addison-Wesley, 2003.</li> <li>Cockburn, A., Escrevendo Casos de Uso Eficazes: Um Guia Pr\u00e1tico para Desenvolvedores de Software, 1st Edition, Bookman Companhia, 2005.</li> <li>Ambler, S., Agile Modeling, Wiley, 2002.</li> <li>Handbook IREB CPRE Foundation Level, Version 1.1.0, September 2022.</li> <li>SOMMERVILLE, Ian., Engenharia de Software, 9th Edition, Pearson Prentice Hall, 2011.</li> <li>BECK, K.; ANDRES, C., Extreme Programming Explained: Embrace Change, Addison-Wesley Professional, 2000.</li> </ol>"},{"location":"references/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Topics 1.1, 1.2, 1.3, and 3 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and app type 09/09/2024 0.5 Technology adjustments <p>\u2190 Back to Main Page</p>"},{"location":"project/overview/","title":"Project Overview","text":"<p>\u2190 Back to Main Page</p>"},{"location":"project/overview/#context","title":"Context","text":"<p>In modern IT infrastructures, ensuring the reliability and availability of servers and services is crucial. The growing complexity of server environments and the increasing volume of data generated by these systems have created a pressing need for real-time monitoring and proactive anomaly detection.</p> <p>This project was initiated to address these challenges by creating a scalable real-time monitoring platform. The system will leverage advanced data analysis and machine learning techniques to monitor server health, detect performance anomalies, and alert system administrators to potential issues before they escalate into failures.</p> <p>The project's aim is to reduce downtime, increase operational efficiency, and minimize the need for manual intervention in server management, ultimately improving the overall stability of IT systems.</p>"},{"location":"project/overview/#objectives-and-scope","title":"Objectives and Scope","text":""},{"location":"project/overview/#objectives","title":"Objectives:","text":"<ul> <li>Develop a scalable and efficient real-time monitoring system capable of tracking server health across a wide range of metrics (e.g., CPU, memory, disk usage, network traffic).</li> <li>Implement machine learning algorithms to analyze historical and real-time server data, detecting anomalies and predicting potential hardware failures.</li> <li>Design an alerting system that notifies administrators of detected issues through various channels, including email, SMS, and integration with messaging platforms like Slack.</li> <li>Create an intuitive dashboard to provide administrators with real-time insights into server status, trends, and health indicators, allowing for informed decision-making.</li> </ul>"},{"location":"project/overview/#scope","title":"Scope:","text":"<p>Included:</p> <ul> <li>Real-time data collection from servers running various operating systems (Linux, Windows, etc.).</li> <li>Integration with existing IT infrastructure tools such as Nagios, Zabbix, and Prometheus.</li> <li>Machine learning models to detect performance anomalies and predict potential failures based on historical data.</li> <li>Alerting system with customizable thresholds and multi-channel notifications.</li> <li>Visual dashboard for displaying server health and performance metrics.</li> </ul> <p>Not Included:</p> <ul> <li>Monitoring of non-server infrastructure components such as databases, network devices, or virtual machines (though these may be included in future iterations).</li> <li>Full end-to-end security monitoring (the focus is primarily on performance monitoring and anomaly detection).</li> <li>Monitoring for non-production environments (e.g., development and staging environments).</li> </ul>"},{"location":"project/overview/#key-features-and-deliverables","title":"Key Features and Deliverables","text":"<p>The key features and deliverables of this project include:</p> Feature Description Data Collection Service Real-time ingestion of server performance metrics. Anomaly Detection Engine Machine learning-based analysis for identifying anomalies and predicting failures. Alerting System Multi-channel notifications for administrators. Web Dashboard A user-friendly interface displaying real-time server status and health metrics. Documentation and API Comprehensive documentation on how to deploy, use, and integrate the monitoring platform with existing infrastructure."},{"location":"project/overview/#technologies-and-tools","title":"Technologies and Tools","text":"<p>The platform will be built using a range of technologies to ensure scalability, reliability, and ease of use:</p> Technology Area Tools and Frameworks Backend Python (Flask/FastAPI), Docker, Kubernetes for container orchestration. Machine Learning Scikit-learn, TensorFlow for training models and anomaly detection. Frontend React.js for the web interface, D3.js for dynamic visualizations. Database PostgreSQL for time-series data storage, MongoDB for logs and unstructured data. Alerting Framework Integrations with SMTP, Twilio for SMS, and Slack API."},{"location":"project/overview/#timeline","title":"Timeline","text":"<p>The project is expected to be completed over the following phases:</p> Phase Duration Tasks Phase 1 0-3 months Research, data collection infrastructure, initial prototype for anomaly detection. Phase 2 3-6 months Development of the alerting system, integration with existing infrastructure, and machine learning model training. Phase 3 6-9 months Dashboard development, user interface design, and system optimizations. Phase 4 9-12 months Deployment, testing in real-world environments, and final adjustments based on user feedback."},{"location":"project/overview/#expected-impact","title":"Expected Impact","text":"<p>Upon completion, the monitoring platform will offer the following benefits to IT administrators and organizations:</p> Benefit Description Proactive failure detection Minimize downtime and manual troubleshooting through machine learning. Faster response times Address critical performance issues more quickly, improving system reliability. Scalability Monitor large and diverse server infrastructures. Cost savings Reduce the need for manual monitoring and improve resource utilization. Improved system performance Enable data-driven optimization and capacity planning."},{"location":"project/overview/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Topics 1.1, 1.2, 1.3, and 3 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and app type 09/09/2024 0.5 Technology adjustments <p>\u2190 Back to Main Page</p>"},{"location":"project/stakeholders/","title":"Stakeholders","text":"<p>\u2190 Back to main page</p>"},{"location":"project/stakeholders/#overview","title":"Overview","text":"<p>This document provides an overview of the stakeholders involved in the project, their roles, and how they contribute to the initiative's success. Understanding each stakeholder's interests, expectations, and involvement is crucial to ensure effective communication and alignment throughout the project lifecycle.</p>"},{"location":"project/stakeholders/#stakeholder-identification","title":"Stakeholder Identification","text":"Stakeholder Role Responsibilities Expectations Egalitarian Multidisciplinary student initiative focused on innovation and social impact. - Bring together diverse talents to develop solutions. - Promote projects aligned with the 2030 Agenda. - Foster student leadership in real contexts. - Generate tangible social impact. - Active student engagement. - Innovative and sustainable solutions based on the Sustainable Development Goals. Escrit\u00f3rio de Gerenciamento de Projetos (EGP) Entity responsible for providing methodological and strategic project support. - Ensure project governance. - Monitor performance indicators. - Efficient project monitoring. - Compliance with methodologies. - Clear communication with teams. Product Owner Representative of users and main stakeholders in the product. - Define and prioritize the backlog. - Ensure the product meets user needs. - Align project goals with stakeholders. - Deliverables with added value. - Clear priorities. - Continuous communication with the team. Scrum Master Agile team facilitator. - Remove impediments. - Ensure the team follows agile principles. - Promote continuous improvement in processes. - Cohesive and productive team. - Efficient processes. - Good collaboration among members. Designer Responsible for user interface and experience. - Create intuitive interfaces. - Develop prototypes. - Ensure product accessibility and aesthetics. - Pleasant and functional interface. - Quick feedback. - Alignment with the development team. Developers Technical team responsible for implementing the system. - Code system functionalities. - Fix bugs. - Test and maintain the software. - Well-defined requirements. - Clear communication with PO, SM, and Designer. - Collaborative environment. Content QA Responsible for gathering content production requirements and curating created content. - Ensure content quality, clarity, and consistency. - Validate alignment with project goals. - Gather requirements and content inputs from stakeholders. - Receive clear and well-structured content. - Defined review and approval processes. - Smooth communication with content creators and other team members. Content Creator Responsible for producing content. - Create relevant and accessible materials. - Adapt language to the target audience. - Align content with project objectives. - Clear content guidelines. - Creative freedom with strategic alignment. Waste Pickers End users and direct beneficiaries of the project. - Participate in interviews and usability tests. - Provide real feedback on their needs and difficulties. - Access to content that improves their quality of life. - Simple, useful, and accessible platform. - Inclusion and recognition."},{"location":"project/stakeholders/#stakeholder-engagement-strategy","title":"Stakeholder Engagement Strategy","text":"<p>Effective stakeholder management is vital to the success of the project. The following strategies will be adopted to ensure alignment with all stakeholders:</p> Strategy Description Links Regular Communication Maintain consistent communication through weekly or biweekly status reports, meetings, and updates. Reports Stakeholder Meetings Organize regular meetings to gather feedback, review progress, and address any concerns. Feedback Channels Establish formal and informal channels to collect information from stakeholders, especially end users and the Product Owner. Feedback Conflict Resolution Proactively address any conflicts or misalignments between stakeholders by facilitating transparent discussions and finding common ground."},{"location":"project/stakeholders/#revision-history","title":"Revision History","text":"Date Version Changes Authors 2025-04-10 0.1 Document creation Leandro Almeida 2025-04-15 0.2 Added Content QA information and minor adjustments Leandro Almeida <p>\u2190 Back to main page</p>"},{"location":"project/development/lifecycle/","title":"Project Life Cycle","text":"<p>\u2190 Back to Main Page</p> <p>This document describes the  Project Life Cycle , from conception to final delivery. Each phase is crucial for ensuring a structured development process, minimizing risks, and maximizing product quality.</p>"},{"location":"project/development/lifecycle/#project-phases","title":"Project Phases","text":"Phase Objective Key Activities Elicitation and Discovery Identify the needs and expectations of stakeholders. Collect requirements through interviews and market analysis. Identify challenges and opportunities. Define users and their key problems. Analysis and Consensus Refine and validate the collected requirements. Prioritize requirements based on feasibility and impact. Validate with stakeholders. Define success metrics. Declaration Formalize requirements and establish a clear scope. Official documentation of functional and non-functional requirements. Define acceptance criteria. Create the initial backlog and product roadmap. Representation Create models and prototypes to visualize the solution. Develop low-fidelity wireframes and prototypes. Model user flows and processes. Continuous feedback with stakeholders for adjustments. Verification and Validation Ensure that the requirements are correctly implemented. Functionality, usability, and performance testing. Review compliance with requirements and acceptance criteria. Adjustments based on test feedback. Organization and Update Keep the project documentation organized and updated. Record changes and backlog evolution. Plan new iterations and refine requirements. Monitor system adoption and performance."},{"location":"project/development/lifecycle/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation Lucas Antunes <p>\u2190 Back to Main Page</p>"},{"location":"project/development/tools/","title":"Tools &amp; Externals","text":"<p>\u2190 Back to Main Page</p>"},{"location":"project/development/tools/#tools-used","title":"Tools Used","text":"Tool Description Link GitHub Source code hosting and version control platform. Used for code versioning, developer collaboration, and CI/CD integration. GitHub MongoDB NoSQL database used for data storage and management. Chosen for its flexibility and scalability in managing large volumes of data. MongoDB Express.js Node.js framework used to build the system's RESTful APIs, simplifying routing and middleware handling. Express.js Vue.js JavaScript framework for building user interfaces and Single Page Applications (SPA). Used for front-end development of the system. Vue.js Postman Tool used to test APIs and endpoints, ensuring that requests and responses behave as expected. Postman Docker Containerization platform that simplifies the creation, development, and execution of applications in isolated environments, ensuring consistency across development and production environments. Docker Swagger Tool for documenting and testing RESTful APIs, allowing developers and stakeholders to easily visualize and interact with API endpoints. Swagger Nginx Web server and reverse proxy used for load distribution, traffic balancing, and static file hosting for the front-end of the system. Nginx Jenkins Continuous integration tool that automates the build, test, and deployment process of the system. Jenkins Redis In-memory database used for caching and performance optimization, ensuring fast responses and scalability. Redis New Relic Application performance monitoring tool that provides detailed metrics about system performance, identifying bottlenecks and areas for improvement. New Relic Trello Visual collaboration platform used for task management, tracking team progress, and organizing sprints and project activities. Trello Slack Team communication platform that facilitates instant messaging and topic organization by channels, with integration to other productivity tools. Slack Sentry Error and performance monitoring tool to detect and fix issues in real-time across applications. Sentry"},{"location":"project/development/tools/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Added tools 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and tools 09/09/2024 0.5 Adjustments and refinements <p>\u2190 Back to Main Page</p>"},{"location":"project/development/technical/api/","title":"Api","text":""},{"location":"project/development/technical/api/#api-documentation-content-and-user-management-system","title":"API Documentation: Content and User Management System","text":"<p>\u2190 Back to Main Page</p> <p>This documentation provides a comprehensive overview of the API for managing users, content, and subscriptions within the system.</p>"},{"location":"project/development/technical/api/#base-url","title":"Base URL","text":"<p>The base URL for all API requests is:</p> <pre><code>https://api.example.com\n</code></pre>"},{"location":"project/development/technical/api/#authentication","title":"Authentication","text":"<p>All requests that require authentication must include a Bearer token in the <code>Authorization</code> header. The token is obtained after a successful login.</p> <p>Example:</p> <pre><code>Authorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"project/development/technical/api/#endpoints","title":"Endpoints","text":""},{"location":"project/development/technical/api/#1-user-management","title":"1. User Management","text":"Endpoint Method Description <code>/api/register</code> <code>POST</code> Registers a new user (doctor/admin). <code>/api/login</code> <code>POST</code> Logs in a user and returns a JWT token. <code>/api/users</code> <code>GET</code> Lists all users (Admin only). <code>/api/users/{id}</code> <code>PUT</code> Edits a user profile. <code>/api/users/{id}</code> <code>DELETE</code> Deletes a user."},{"location":"project/development/technical/api/#11-user-registration","title":"1.1 User Registration","text":"<ul> <li>URL: <code>/api/register</code></li> <li>Method: <code>POST</code></li> <li>Description: Registers a new user (doctor or administrator).</li> <li>Request Body:</li> </ul> <p><code>json   {     \"name\": \"John Doe\",     \"email\": \"john.doe@example.com\",     \"password\": \"password123\",     \"role\": \"doctor\"   }</code> * Responses:</p> <ul> <li>200 OK : Successfully registered user.</li> </ul> <p><code>json   {     \"message\": \"User registered successfully\",     \"user\": {       \"_id\": \"60c72b2f9b1d8f7f1e9e4f72\",       \"name\": \"John Doe\",       \"email\": \"john.doe@example.com\",       \"role\": \"doctor\"     }   }</code></p> <ul> <li>400 Bad Request : Invalid input data.</li> </ul> <p><code>json   {     \"error\": \"Invalid input data\"   }</code></p>"},{"location":"project/development/technical/api/#12-user-login","title":"1.2 User Login","text":"<ul> <li>URL: <code>/api/login</code></li> <li>Method: <code>POST</code></li> <li>Description: Logs in a user and returns a JWT token.</li> <li>Request Body:</li> </ul> <p><code>json   {     \"email\": \"john.doe@example.com\",     \"password\": \"password123\"   }</code> * Responses:</p> <ul> <li>200 OK : Login successful, JWT token returned.</li> </ul> <p><code>json   {     \"message\": \"Login successful\",     \"token\": \"your-jwt-token\"   }</code></p> <ul> <li>401 Unauthorized : Incorrect credentials.</li> </ul> <p><code>json   {     \"error\": \"Invalid credentials\"   }</code></p>"},{"location":"project/development/technical/api/#13-get-user-list-admin-only","title":"1.3 Get User List (Admin only)","text":"<ul> <li>URL: <code>/api/users</code></li> <li>Method: <code>GET</code></li> <li>Description: Lists all users (Admin access required).</li> <li>Response: <code>json   [     {       \"_id\": \"60c72b2f9b1d8f7f1e9e4f72\",       \"name\": \"John Doe\",       \"email\": \"john.doe@example.com\",       \"role\": \"doctor\"     },     {       \"_id\": \"60c72b2f9b1d8f7f1e9e4f73\",       \"name\": \"Jane Smith\",       \"email\": \"jane.smith@example.com\",       \"role\": \"administrator\"     }   ]</code></li> </ul>"},{"location":"project/development/technical/api/#14-edit-user-profile","title":"1.4 Edit User Profile","text":"<ul> <li>URL: <code>/api/users/{id}</code></li> <li>Method: <code>PUT</code></li> <li>Description: Edits a user profile.</li> <li>Request Body:</li> </ul> <p><code>json   {     \"name\": \"John Doe Updated\",     \"email\": \"john.doe.updated@example.com\"   }</code> * Response:</p> <ul> <li>200 OK : User updated successfully.</li> </ul> <p><code>json   {     \"message\": \"User updated successfully\",     \"user\": {       \"_id\": \"60c72b2f9b1d8f7f1e9e4f72\",       \"name\": \"John Doe Updated\",       \"email\": \"john.doe.updated@example.com\",       \"role\": \"doctor\"     }   }</code></p> <ul> <li>400 Bad Request : Invalid data provided.</li> </ul> <p><code>json   {     \"error\": \"Invalid input data\"   }</code></p>"},{"location":"project/development/technical/api/#15-delete-user","title":"1.5 Delete User","text":"<ul> <li>URL: <code>/api/users/{id}</code></li> <li>Method: <code>DELETE</code></li> <li>Description: Deletes a user.</li> <li> <p>Response:</p> </li> <li> <p>200 OK : User deleted successfully.</p> </li> </ul> <p><code>json   {     \"message\": \"User deleted successfully\"   }</code></p> <ul> <li>404 Not Found : User not found.</li> </ul> <p><code>json   {     \"error\": \"User not found\"   }</code></p>"},{"location":"project/development/technical/api/#2-content-management","title":"2. Content Management","text":"Endpoint Method Description <code>/api/documents</code> <code>POST</code> Creates a new document. <code>/api/documents</code> <code>GET</code> Lists all documents. <code>/api/documents/{id}</code> <code>PUT</code> Edits a document. <code>/api/documents/{id}</code> <code>DELETE</code> Deletes a document."},{"location":"project/development/technical/api/#21-create-document","title":"2.1 Create Document","text":"<ul> <li>URL: <code>/api/documents</code></li> <li>Method: <code>POST</code></li> <li>Description: Creates a new document.</li> <li>Request Body:</li> </ul> <p><code>json   {     \"title\": \"Medical Guidelines for COVID-19\",     \"content\": \"Detailed content about COVID-19 prevention.\",     \"topics\": [\"60c72b2f9b1d8f7f1e9e4f75\"]   }</code> * Responses:</p> <ul> <li>201 Created : Document created successfully.</li> </ul> <p><code>json   {     \"message\": \"Document created successfully\",     \"document\": {       \"_id\": \"60c72b2f9b1d8f7f1e9e4f76\",       \"title\": \"Medical Guidelines for COVID-19\",       \"content\": \"Detailed content about COVID-19 prevention.\",       \"topics\": [\"60c72b2f9b1d8f7f1e9e4f75\"]     }   }</code></p> <ul> <li>400 Bad Request : Invalid input data.</li> </ul> <p><code>json   {     \"error\": \"Invalid input data\"   }</code></p>"},{"location":"project/development/technical/api/#22-get-documents-list","title":"2.2 Get Documents List","text":"<ul> <li>URL: <code>/api/documents</code></li> <li>Method: <code>GET</code></li> <li>Description: Lists all documents.</li> <li>Response: <code>json   [     {       \"_id\": \"60c72b2f9b1d8f7f1e9e4f76\",       \"title\": \"Medical Guidelines for COVID-19\",       \"content\": \"Detailed content about COVID-19 prevention.\",       \"topics\": [\"60c72b2f9b1d8f7f1e9e4f75\"]     }   ]</code></li> </ul>"},{"location":"project/development/technical/api/#23-edit-document","title":"2.3 Edit Document","text":"<ul> <li>URL: <code>/api/documents/{id}</code></li> <li>Method: <code>PUT</code></li> <li>Description: Edits an existing document.</li> <li>Request Body:</li> </ul> <p><code>json   {     \"title\": \"Updated Medical Guidelines for COVID-19\",     \"content\": \"Updated content about COVID-19 prevention.\"   }</code> * Response:</p> <ul> <li>200 OK : Document updated successfully.</li> </ul> <p><code>json   {     \"message\": \"Document updated successfully\",     \"document\": {       \"_id\": \"60c72b2f9b1d8f7f1e9e4f76\",       \"title\": \"Updated Medical Guidelines for COVID-19\",       \"content\": \"Updated content about COVID-19 prevention.\"     }   }</code></p> <ul> <li>400 Bad Request : Invalid data provided.</li> </ul> <p><code>json   {     \"error\": \"Invalid input data\"   }</code></p>"},{"location":"project/development/technical/api/#24-delete-document","title":"2.4 Delete Document","text":"<ul> <li>URL: <code>/api/documents/{id}</code></li> <li>Method: <code>DELETE</code></li> <li>Description: Deletes a document.</li> <li> <p>Response:</p> </li> <li> <p>200 OK : Document deleted successfully.</p> </li> </ul> <p><code>json   {     \"message\": \"Document deleted successfully\"   }</code></p> <ul> <li>404 Not Found : Document not found.</li> </ul> <p><code>json   {     \"error\": \"Document not found\"   }</code></p> <p>\u2190 Back to Main Page</p>"},{"location":"project/development/technical/architecture/","title":"Architecture","text":"<p>\u2190 Back to Main Page</p>"},{"location":"project/development/technical/architecture/#introduction","title":"Introduction","text":"<p>This architecture document outlines the structure and core components of the content and user management system, focusing on the features and requirements defined in the project backlog. The architecture is designed to be scalable, modular, and easy to maintain, aiming to meet the MVP's needs and evolve as the product grows.</p>"},{"location":"project/development/technical/architecture/#system-overview","title":"System Overview","text":"<p>The system's primary goal is to enable the management of users and content for doctors and administrators, including user registration, authentication, profile management, and document and subscription management.</p>"},{"location":"project/development/technical/architecture/#technologies-used","title":"Technologies Used","text":"Technology Description Backend Node.js with Express Database MongoDB (for storing user and content data) Authentication JWT (JSON Web Tokens) for authentication and authorization Frontend Vue.js (for the admin interface) Notifications Service Worker and Firebase for push notifications"},{"location":"project/development/technical/architecture/#component-architecture","title":"Component Architecture","text":""},{"location":"project/development/technical/architecture/#1-user-management-ep01","title":"1. User Management (EP01)","text":"<p>Responsible for creating, editing, deleting, and authenticating users (doctors and administrators). Key features include:</p> Feature Description User Registration (F01) Creating accounts for doctors and administrators. Login (F05) Authenticating users with credentials and generating a JWT token. Profile Editing (F04) Allowing users to edit their profile, such as resetting passwords or updating personal details. User Search and Listing (F02) Administrators can search and list registered users. User Editing and Deletion (F03) Functionality for managing registered users, correcting or removing incorrect data."},{"location":"project/development/technical/architecture/#2-content-management-ep01","title":"2. Content Management (EP01)","text":"<p>Involves creating and managing documents, topics, and materials accessed by users.</p> Feature Description Document Creation and Listing (F06) Administrators can create new documents and view existing ones. Document Editing and Deletion (F07) Functionality to update or remove outdated documents. Topics (F06) Allows for creating and listing topics related to documents."},{"location":"project/development/technical/architecture/#3-subscription-and-notifications-management-ep02","title":"3. Subscription and Notifications Management (EP02)","text":"<p>Responsible for managing doctors' subscriptions and sending notifications.</p> Feature Description Subscription Management (F12) Allows doctors to access their financial area to manage their subscription."},{"location":"project/development/technical/architecture/#4-authentication-and-authorization","title":"4. Authentication and Authorization","text":"<p>Authentication will be handled using JWT. Upon logging in, a user will receive a token granting access to the system's functionalities. Tokens will be validated to ensure that the user is authorized to access requested data and resources.</p>"},{"location":"project/development/technical/architecture/#5-architecture-layers","title":"5. Architecture Layers","text":"<p>The architecture follows the MVC (Model-View-Controller) pattern:</p> Layer Description Model Represents the data structure. User and document models are stored in the MongoDB database. View The user interface, built with Vue.js, displays information and interacts with the user to capture data. Controller Manages business logic and interacts with the models. Example: The user controller manages registration, login, and profile editing."},{"location":"project/development/technical/architecture/#6-data-flow-and-frontend-integration","title":"6. Data Flow and Frontend Integration","text":"<p>The data flow follows a RESTful structure. The frontend application built with Vue.js makes calls to the backend REST APIs (Node.js + Express). The backend interacts with the MongoDB database to read and write data.</p>"},{"location":"project/development/technical/architecture/#example-endpoints","title":"Example Endpoints:","text":"HTTP Method Endpoint Description <code>POST</code> <code>/api/register</code> Create a new user (doctor or administrator). <code>POST</code> <code>/api/login</code> User login. <code>GET</code> <code>/api/users</code> List users (admin only). <code>PUT</code> <code>/api/users/{id}</code> Edit user. <code>DELETE</code> <code>/api/users/{id}</code> Delete user."},{"location":"project/development/technical/architecture/#7-security","title":"7. Security","text":"<p>Security is a priority to ensure that only authenticated and authorized users can access sensitive data.</p> Security Feature Description Encryption Passwords will be securely stored using the bcrypt hashing algorithm. JWT Tokens Authentication will be managed with JWT tokens, which will have an expiration time, requiring users to log in again after a certain period. Access Control The system will allow different levels of access, with only administrators able to perform user and document creation, editing, and deletion."},{"location":"project/development/technical/architecture/#data-models","title":"Data Models","text":""},{"location":"project/development/technical/architecture/#user-model","title":"User Model","text":"<pre><code>{\n  \"_id\": \"objectId\",\n  \"name\": \"string\",\n  \"email\": \"string\",\n  \"password\": \"string\",\n  \"role\": \"doctor | administrator\",\n  \"registrationDate\": \"date\",\n  \"status\": \"active | inactive\"\n}\n</code></pre>"},{"location":"project/development/technical/architecture/#document-model","title":"Document Model","text":"<pre><code>{\n  \"_id\": \"objectId\",\n  \"title\": \"string\",\n  \"content\": \"string\",\n  \"topics\": [\"objectId\"],\n  \"creationDate\": \"date\",\n  \"updateDate\": \"date\",\n  \"status\": \"active | inactive\"\n}\n</code></pre>"},{"location":"project/development/technical/architecture/#topic-model","title":"Topic Model","text":"<pre><code>{\n  \"_id\": \"objectId\",\n  \"title\": \"string\",\n  \"description\": \"string\",\n  \"documentId\": \"objectId\"\n}\n</code></pre>"},{"location":"project/development/technical/architecture/#feature-implementation","title":"Feature Implementation","text":""},{"location":"project/development/technical/architecture/#feature-f01-user-registration","title":"Feature F01 - User Registration","text":"<ul> <li>Description: The doctor or administrator registers on the system with basic information such as name, email, and password.</li> <li>Process: The user fills out a registration form. The backend validates the information, and if everything is correct, a new user is created in the database.</li> </ul>"},{"location":"project/development/technical/architecture/#feature-f05-user-login","title":"Feature F05 - User Login","text":"<ul> <li>Description: Allows doctors and administrators to log in using their email and password.</li> <li>Process: The user submits their credentials, which are validated by the system. If valid, a JWT token is generated and sent to the frontend.</li> </ul>"},{"location":"project/development/technical/architecture/#feature-f12-subscription-management","title":"Feature F12 - Subscription Management","text":"<ul> <li>Description: The doctor can access their financial area to manage their subscription.</li> <li>Process: The backend retrieves the doctor's financial information and displays the details on the frontend.</li> </ul>"},{"location":"project/development/technical/architecture/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Topics 1.1, 1.2, 1.3, and 3 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and app type 09/09/2024 0.5 Technology adjustments <p>\u2190 Back to Main Page</p>"},{"location":"project/development/technical/database-schema/","title":"Database Schema","text":"<p>\u2190 Back to Main Page</p>"},{"location":"project/development/technical/database-schema/#1-tables","title":"1. Tables","text":""},{"location":"project/development/technical/database-schema/#11-users","title":"1.1. Users","text":"<p>Table that stores information about system users, such as doctors and administrators.</p> Column Type Description id UUID Unique identifier for the user (Primary Key) name VARCHAR(255) User's name email VARCHAR(255) Unique email for the user (Unique Key) password VARCHAR(255) User's encrypted password role ENUM User's role (e.g.,<code>doctor</code>,<code>administrator</code>) created_at TIMESTAMP Record creation date updated_at TIMESTAMP Last record update date"},{"location":"project/development/technical/database-schema/#12-documents","title":"1.2. Documents","text":"<p>Table that stores information about documents registered in the system.</p> Column Type Description id UUID Unique identifier for the document (Primary Key) title VARCHAR(255) Document title content TEXT Document content created_by UUID User ID who created the document (Foreign Key referencing <code>Users.id</code>) created_at TIMESTAMP Document creation date updated_at TIMESTAMP Last document update date"},{"location":"project/development/technical/database-schema/#13-topics","title":"1.3. Topics","text":"<p>Table that stores topics related to documents.</p> Column Type Description id UUID Unique identifier for the topic (Primary Key) name VARCHAR(255) Topic name created_at TIMESTAMP Topic creation date updated_at TIMESTAMP Last topic update date"},{"location":"project/development/technical/database-schema/#14-document_topics-relational","title":"1.4. Document_Topics (Relational)","text":"<p>Intermediate table that associates documents and topics, allowing a document to have multiple topics.</p> Column Type Description document_id UUID Document ID (Foreign Key referencing <code>Documents.id</code>) topic_id UUID Topic ID (Foreign Key referencing <code>Topics.id</code>)"},{"location":"project/development/technical/database-schema/#15-subscription","title":"1.5. Subscription","text":"<p>Table that stores information about doctors' subscriptions.</p> Column Type Description id UUID Unique identifier for the subscription (Primary Key) doctor_id UUID Doctor ID (Foreign Key referencing <code>Users.id</code>) start_date TIMESTAMP Subscription start date end_date TIMESTAMP Subscription end date status ENUM Subscription status (e.g.,<code>active</code>,<code>inactive</code>) created_at TIMESTAMP Subscription creation date updated_at TIMESTAMP Last subscription update date"},{"location":"project/development/technical/database-schema/#2-relationships","title":"2. Relationships","text":"<ol> <li>Users \u2194 Documents:</li> <li>A user (doctor or administrator) can create multiple  documents , but each document is created by a single user.</li> <li>One-to-many relationship between <code>Users</code> and <code>Documents</code>.</li> <li>Documents \u2194 Topics:</li> <li>A document can be associated with multiple  topics , and a topic can be associated with multiple  documents .</li> <li>Many-to-many relationship between <code>Documents</code> and <code>Topics</code>, resolved by the intermediate table <code>Document_Topics</code>.</li> <li>Users \u2194 Subscription:</li> <li>A user (doctor) can have a single  subscription , but a subscription is linked to only one  user .</li> <li>One-to-one relationship between <code>Users</code> and <code>Subscription</code> (for doctors).</li> </ol>"},{"location":"project/development/technical/database-schema/#3-example-entity-relationship-diagram-erd","title":"3. Example Entity-Relationship Diagram (ERD)","text":"<pre><code>  Users\n  +-------------------------+\n  | id (PK)                 |\n  | name                    |\n  | email                   |\n  | password                |\n  | role                    |\n  | created_at              |\n  | updated_at              |\n  +-------------------------+\n         |\n         | 1\n         | \n         | N\n   +-------------------------+\n   | Documents               |\n   |-------------------------|\n   | id (PK)                 |\n   | title                   |\n   | content                 |\n   | created_by (FK)         |\n   | created_at              |\n   | updated_at              |\n   +-------------------------+\n         |\n         | N\n         |\n   +-------------------------+\n   | Document_Topics         |\n   |-------------------------|\n   | document_id (FK)        |\n   | topic_id (FK)           |\n   +-------------------------+\n         |\n         | N\n         |\n   +-------------------------+\n   | Topics                  |\n   |-------------------------|\n   | id (PK)                 |\n   | name                    |\n   | created_at              |\n   | updated_at              |\n   +-------------------------+\n\n   +-------------------------+\n   | Subscription            |\n   |-------------------------|\n   | id (PK)                 |\n   | doctor_id (FK)          |\n   | start_date              |\n   | end_date                |\n   | status                  |\n   | created_at              |\n   | updated_at              |\n   +-------------------------+\n</code></pre>"},{"location":"project/development/technical/database-schema/#4-field-explanations","title":"4. Field Explanations","text":"<ul> <li>PK (Primary Key) : Primary key, used to uniquely identify a record.</li> <li>FK (Foreign Key) : Foreign key, used to establish a relationship with another table.</li> </ul>"},{"location":"project/development/technical/database-schema/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Topics 1.1, 1.2, 1.3, and 3 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and app type 09/09/2024 0.5 Technology adjustments <p>\u2190 Back to Main Page</p>"},{"location":"project/management/deliverables/","title":"Deliverables","text":"<p>\u2190 Back to Main Page</p>"},{"location":"project/management/deliverables/#psp-2","title":"PSP 2","text":"PSP2_ID Type Delivery Date Deliverable Description Format PSP2_01 Planning 04/15/2025 MVP Canvas and Product Backlog Define the MVP Canvas and complete the Product Backlog. Educado Teams - PSP 2 PSP2_02 Planning 04/20/2025 Field Data Collection Questions Create a list of questions for the field data collection process. PDF document, markdown documentation. PSP2_03 Planning 04/22/2025 Field Data Collection Guide Develop a guide for data collection during cooperative visits. PDF guide, markdown documentation. PSP2_04 Sprint 1 05/06/2025 Field Data Collection Report Prepare a report summarizing the data collected during cooperative visits. PDF report, markdown documentation. PSP2_05 Sprint 2 05/20/2025 Content Creator Journey Mapping Map the user experience of a content creator within the app. Visual map, markdown documentation. PSP2_06 Sprint 3 06/03/2025 2 New Courses Develop two new training courses aimed at content creators. Course outlines, learning materials, multimedia content. PSP2_07 Sprint 4 06/17/2025 Subject Final Presentation Final project pitch with project outcomes and future vision. PowerPoint slides, video presentation, or markdown documentation. PSP2_08 Final 07/01/2025 Conecta Event Presentation Present the final project pitch and demonstrate results at the event. PowerPoint slides, video presentation, or multimedia content. PSP2_09 Final 08/23/2025 Egalitarian Event Presentation Present the project at the Egalitarian event in the Netherlands. PowerPoint slides, video presentation, or multimedia content."},{"location":"project/management/deliverables/#psp-5","title":"PSP 5","text":"PSP5_ID Type Delivery Date Deliverable Description Format PSP5_01 Planning 04/15/2025 MVP Canvas and Product Backlog Canvas MVP and Product Backlog version. Educado Teams - PSP 5 PSP5_02 Planning 04/20/2025 Field Data Collection Questions Questions for field data collect. PDF document, markdown documentation. PSP5_03 Planning 04/22/2025 Field Data Collection Guide Create a document to guide data collect on cooperative visit. PDF quide, markdown documentation. PSP5_04 Sprint 1 05/06/2025 Field Data Collection Report Create a document to report data collected on cooperative visit. PDF quide, markdown documentation. PSP5_05 Sprint 2 05/20/2025 Course Impact Indicators Analyze and report on key performance indicators of previous courses. Charts, reports, spreadsheet dashboards. PSP5_06 Sprint 3 06/03/2025 Usability Test Report Report on findings and impressions from usability testing. PDF report, summary of usability test findings. PSP5_07 Sprint 4 06/17/2025 Subject Final Presentation Present the final project pitch and demonstrate results at the event. PowerPoint slides, video presentation, or multimedia content. PSP5_08 Final 07/01/2025 Conecta Event Presentation Present the final project pitch and demonstrate results at the event. PowerPoint slides, video presentation, or multimedia content. PSP5_09 Final 08/23/2025 Egalitarian Event Presentation Present the project at the Egalitarian event in the Netherlands. PowerPoint slides, video presentation, or multimedia content."},{"location":"project/management/deliverables/#software","title":"Software","text":"Software_ID Type Delivery Date Deliverable Description Format Software_01 Planning 04/15/2025 Documentation Update - alpha_v_1.0 Wiki - Project Managment Educado Wiki Software_02 Planning 04/20/2025 Field Data Collection Questions Questions for field data collect. PDF document, markdown documentation. Software_03 Planning 04/22/2025 Field Data Collection Guide Create a document to guide data collect on cooperative visit. PDF quide, markdown documentation. Software_04 Planning 04/28/2025 Documentation Update - alpha_v_1.1 Wiki - Product Overview, Backlog, MVP 1 Educado Wiki Software_05 Planning 05/12/2025 Field Data Collection Report Create a document to report data collected on cooperative visit. PDF quide, markdown documentation. Software_06 Planning 05/12/2025 Documentation Update - alpha_v_1.2 Wiki - API, Arquitecture, Database, Tools, Lessons learned Educado Wiki Software_07 Sprint 1 05/26/2025 Documentation Update - alpha_v_2.0 Wiki - Compliance Mapping Educado Wiki Software_08 Sprint 2 06/09/2025 Documentation Update - alpha_v_2.1 Wiki - Technical refactoring plan Educado Wiki Software_09 Sprint 3 06/23/2025 Documentation Update - alpha_v_3.0 Wiki - Technical refactoring report v1.0 Educado Wiki Software_10 Sprint 4 07/07/2025 Documentation Update - alpha_v_3.1 Wiki - Technical refactoring report v1.1 Educado Wiki Software_11 Sprint 5 07/21/2025 Documentation Update - alpha_v_3.2 Wiki - Technical refactoring report v1.2 Educado Wiki Software_12 Sprint 6 08/04/2025 Documentation Update - alpha_v_3.3 Wiki - Technical refactoring report v1.3 Educado Wiki Software_13 Final 08/15/2025 Technical Documentation - beta_v_1.0 Consolidate all system technical documentation. Markdown or PDF documentation. Software_14 Final 08/15/2025 Software MVP1 - Stable Version Deliver a stable version of the MVP (Minimum Viable Product). Deployed software version, release notes. Software_15 Final 08/15/2025 Final Report Final report consolidating the outcomes of the project. PDF document or markdown file. Software_16 Final 08/23/2025 Final Presentation Final presentation consolidating the outcomes of the project for Saxion Event PDF document, markdown file or PowerPoint"},{"location":"project/management/deliverables/#revision-history","title":"Revision History","text":"Date Version Changes Authors 03/28/2024 0.1 Document creation Lucas Antunes <p>\u2190 Back to Main Page</p>"},{"location":"project/management/issue-tracking/","title":"Issue Tracking","text":"<p>\u2190 Back to Main Page</p> <p>This document outlines the Issue Tracking process for managing and resolving issues throughout the project lifecycle. Effective issue tracking ensures that problems are identified early, tracked efficiently, and resolved in a timely manner.</p>"},{"location":"project/management/issue-tracking/#issue-tracking-process","title":"Issue Tracking Process","text":"Stage Objective Key Actions/Details 1. Issue Identification Identify and document issues that may impact the project. - Record issues as they arise during development, testing, or post-launch.  - Classify issues by severity, impact, and urgency.  - Capture detailed descriptions, steps to reproduce, and any relevant screenshots or logs. 2. Issue Prioritization Assign priority levels to each issue based on its impact on the project. -Critical : Must be resolved immediately to prevent system failure.  - High : Needs urgent attention to avoid major disruptions.  - Medium : Important but does not affect critical functionalities.  - Low : Minor impact, can be addressed later. 3. Issue Assignment Assign issues to the appropriate team members for resolution. - Allocate issues based on team member expertise and workload.  - Set clear expectations on resolution deadlines and outcomes.  - Provide necessary resources or information for issue resolution. 4. Issue Resolution Resolve issues by implementing fixes or workarounds. - Address root causes of issues to prevent recurrence.  - Implement solutions and verify that the issue is fixed.  - Test thoroughly to ensure that the fix does not introduce new problems. 5. Verification and Closure Verify that resolved issues meet the defined acceptance criteria and close them. - Review the resolution with stakeholders and the team.  - Confirm that the issue no longer affects the project or product.  - Close the issue once it\u2019s resolved and communicate the outcome. 6. Documentation and Reporting Maintain a record of issues, resolutions, and lessons learned. - Update the issue tracking system with detailed information on each issue.  - Generate reports on issues, resolutions, and ongoing challenges.  - Use issue tracking data for continuous improvement and future project planning."},{"location":"project/management/issue-tracking/#revision-history","title":"Revision History","text":""},{"location":"project/management/issue-tracking/#revision-history_1","title":"Revision History","text":"Date Version Changes Authors 03/28/2024 0.1 Document creation Lucas Antunes <p>\u2190 Back to Main Page</p>"},{"location":"project/management/lessons-learned/","title":"Lessons Learned","text":"<p>\u2190 Back to Main Page</p> Lesson Action Result 1. Importance of Defining Requirements Clearly Clearly and precisely defining the requirements is essential for the successful execution of the project. Early documentation and stakeholder involvement are key. Constant scope changes caused rework and delays. A deeper analysis at the beginning could have saved time and resources. 2. The Importance of Automated Testing The adoption of automated testing was a positive change to improve system reliability and maintenance. Implementing automated tests ensures that changes do not break existing functionality, saving time in the long run. 3. Dependency and Update Management Use version control tools like <code>npm</code>to manage external dependencies and ensure compatibility across all system versions. By managing dependencies and versions effectively, compatibility issues were avoided and stability was ensured. 4. Communication Between Team and Stakeholders Establish regular feedback meetings to ensure all stakeholders are aligned on project goals and deliverables. Improved transparency, aligned expectations, and the ability to adjust priorities based on continuous feedback. 5. The Value of Adequate Documentation Properly document each step of the development process, including system architecture, workflows, and API details. Well-organized documentation made deployment and future updates faster and less prone to errors, facilitating new team member training. 6. Scalability Planning Implement scalability practices such as microservices and load balancing from the start to accommodate growth. The system\u2019s scalability improved, supporting more users and data without sacrificing performance. 7. The Importance of Continuous Integration and Automated Deployment Implement CI/CD pipelines for frequent integration and automation of deployments to ensure faster releases and error identification. Continuous integration and automated delivery reduced production errors and improved team efficiency. 8. Challenges with Subscription Management and Payment Processing Conduct detailed analysis, select payment providers carefully, and implement load testing and payment simulations. Payment and subscription management became more efficient and stable, improving the user experience and system reliability."},{"location":"project/management/lessons-learned/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Topics 1.1, 1.2, 1.3, and 3 added 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and app type 09/09/2024 0.5 Technology adjustments <p>\u2190 Back to Main Page</p>"},{"location":"project/management/roadmap/","title":"Project Roadmap","text":"<p>\u2190 Back to Main Page</p>"},{"location":"project/management/roadmap/#overview","title":"Overview","text":"<p>The roadmap outlines the phases and steps involved in the development and delivery of the user and content management system solution for stakeholders. The process follows an agile approach, ensuring continuous iteration, feedback, and improvement.</p> Phase Date Range Goals 1 - Planning March 30  May 12 - Create a field data collection methodology to guide priorities.  - Review existing documentation to collect requirements.  - Map solutions KPIs.  - Create a product backlog.  - Define a minimum viable product (MVP). 2 - Development May 13  July 30 - Develop a marketing strategy for launching the solution.  - Create a content creation process mapping for new content.  - Create 3 new courses to collect KPIs.  - Collect KPIs from existing courses to align priorities.  - Develop the software MVP and stabilize the version. 3 - Finish Deliverables July 31  August 14 - MVP 1 - Educado software solution: Stable MVP version of the software.  - GitHub WIKI: Update and finalize.  - Project: Final report consolidation.  - Project: Final presentation preparation. 4 - Prepare Presentation August 15  August 22 - Review all deliverables.  - Create a presentation for the Egalitarian event at Saxion."},{"location":"project/management/roadmap/#revision-history","title":"Revision History","text":"Date Version Changes Authors 03/28/2024 0.1 Document creation Lucas Antunes <p>\u2190 Back to Main Page</p>"},{"location":"project/management/workflow/","title":"Project Workflow","text":"<p>\u2190 Back to Main Page</p> <p>This document outlines the Project Workflow, describing the process from task discovery to final delivery. The workflow details the key steps, responsibilities, and activities to ensure smooth and efficient task execution.</p> Phase Objective Key Activities Responsible Parties 1. On-boarding Understand, refine, and align the task scope to ensure it is ready for development. - Gather context and requirements with stakeholders  - Review acceptance criteria and task impact  - Validate dependencies and estimate effort  - Ensure compliance with the Definition of Ready (DoR) Product Owner, Scrum Master 2. To-do Prepare the task for execution by prioritizing it in the backlog and ensuring implementation clarity. - Prioritize in the backlog  - Add technical details if needed  - Confirm readiness for development  - Link with related epics and user stories Product Owner, Scrum Master 3. In-Progress Develop the task according to defined criteria, ensuring quality and continuous alignment. - Implement and version the code  - Peer reviews (code review)  - Regular status updates  - Ongoing team communication Dev Team, Scrum Master 4. In-Review Validate the completed task against acceptance and quality criteria. - Manual and/or automated testing  - Check against Definition of Done (DoD)  - Make adjustments based on review feedback  - Final approval by QA or PO Scrum Master, Product Owner 5. Done Ensure the task is fully delivered or ready for delivery to the final environment. - Merge to main branch / deploy  - Update technical and functional documentation  - Notify team of completion  - Mark task as completed in the board Dev Team, Scrum Master"},{"location":"project/management/workflow/#revision-history","title":"Revision History","text":"Date Version Changes Authors 03/28/2024 0.1 Document creation Lucas Antunes <p>\u2190 Back to Main Page</p>"},{"location":"project/management/meetings/meeting_0/","title":"Meeting Minutes 0","text":"<p>Date: 03/27/2025 Time: 08:00 PM UTM-3 Location: Virtual Chairperson: PM Lucas Antunes Attendees: </p> <ul> <li>Leandro Almeida  </li> <li>Lu\u00edsa Le\u00e3o  </li> <li>SM Pedro Rodrigues  </li> <li>Thiago Tonin  </li> <li>Vitor Andreozzi  </li> <li>Vitor Marconi  </li> </ul>"},{"location":"project/management/meetings/meeting_0/#1-opening","title":"1. Opening","text":"<p>Meeting called to order at: 08:10 PM UTM-3  </p>"},{"location":"project/management/meetings/meeting_0/#2-agenda-review","title":"2. Agenda Review","text":"<p>Topics to be discussed: </p> <ol> <li>Team presentation and opening of semester;</li> <li>New documentation template presentation;</li> <li>Define Who's gonna develop topics:<ul> <li>Project overview;</li> <li>Project Vision;</li> <li>Project Objectives;</li> <li>StakeHolders;</li> </ul> </li> </ol>"},{"location":"project/management/meetings/meeting_0/#3-previous-meeting-minutes","title":"3. Previous Meeting Minutes","text":"<p>Review and approval of the previous meeting\u2019s minutes (if applicable). </p>"},{"location":"project/management/meetings/meeting_0/#4-discussion-decisions","title":"4. Discussion &amp; Decisions","text":""},{"location":"project/management/meetings/meeting_0/#topic-1-develop-inicial-topics","title":"Topic 1: Develop inicial topics","text":"<p>Summary: Team decided responsibles for review existing documentation and develop new follow topics for GitHub Wiki Decision/Action Items </p> <ol> <li>Project overview:<ul> <li>Responsible: Vitor Andreozzi</li> <li>Due: April 10, 2025</li> </ul> </li> <li>Project Vision:<ul> <li>Responsible: Thiago Tonin</li> <li>Due: April 10, 2025  </li> </ul> </li> <li>Project Objectives:<ul> <li>Responsible: Vitor Marconi</li> <li>Due: April 10, 2025  </li> </ul> </li> <li>StakeHolders:<ul> <li>Responsible: Leandro Almeida</li> <li>Due: April 10, 2025  </li> </ul> </li> </ol>"},{"location":"project/management/meetings/meeting_0/#5-next-steps-action-items","title":"5. Next Steps &amp; Action Items","text":"<ul> <li> <p>Each team member will work on their assigned documentation topic and submit a first draft to the GitHub Wiki by April 10, 2025.</p> </li> <li> <p>Lucas Antunes (PM) and Pedro Rodrigues (SM) will review all submitted content by April 14, 2025.</p> </li> <li> <p>Pedro Rodrigues (SM) will ensure team follows up on deadlines and assist with any blockers.</p> </li> </ul>"},{"location":"project/management/meetings/meeting_0/#6-next-meeting","title":"6. Next Meeting","text":"<p>Date: 04/10/2025 Time: 07:00 PM UTM-3  </p>"},{"location":"project/management/meetings/meeting_0/#7-closing","title":"7. Closing","text":"<p>Meeting adjourned at: 08:53 PM  </p> <p>Minutes prepared by:Lucas Antunes Date:** 03/27/2025  </p>"},{"location":"project/management/meetings/meeting_1/","title":"Meeting Minutes 1","text":"<p>Date: 04/10/2025 Time: 07:00 PM - UTM-3 Location: Virtual Chairperson: PM Lucas Antunes Attendees:     - PSP2 - SM Enzo Menadel     - PSP5 - SM Felipe Oliveira     - Software - SM Pedro Rodrigues  </p>"},{"location":"project/management/meetings/meeting_1/#1-opening","title":"1. Opening","text":"<p>Meeting called to order at: 07:00 PM UTM-3</p>"},{"location":"project/management/meetings/meeting_1/#2-agenda-review","title":"2. Agenda Review","text":"<p>Topics to be discussed:     - Define roles and scopes for PSP2, PSP5, Software and Saxion teams     - Review software deliverables     - Prepare alignment for in-field cooperative visit during upcoming co-working session (April 15)  </p>"},{"location":"project/management/meetings/meeting_1/#3-previous-meeting-minutes","title":"3. Previous Meeting Minutes","text":"<ol> <li>Project overview:<ul> <li>Responsible: Vitor Andreozzi</li> <li>In Review: April 10, 2025</li> </ul> </li> <li>Project Vision:<ul> <li>Responsible: Thiago Tonin</li> <li>In Review: April 10, 2025  </li> </ul> </li> <li>Project Objectives:<ul> <li>Responsible: Vitor Marconi</li> <li>In Review: April 10, 2025  </li> </ul> </li> <li>StakeHolders:<ul> <li>Responsible: Leandro Almeida</li> <li>In Review: April 10, 2025  </li> </ul> </li> </ol>"},{"location":"project/management/meetings/meeting_1/#4-discussion-decisions","title":"4. Discussion &amp; Decisions","text":""},{"location":"project/management/meetings/meeting_1/#topic-1-psp2-team-progress-structure","title":"Topic 1: PSP2 Team Progress &amp; Structure","text":"<p>Summary: PSP2 reported initial confusion in team structure due to two absent members in the first session. PM-Canvas is completed, but the product backlog is still missing. Decision/Action Items:</p> <ul> <li>Fill in the product backlog with features and deliverables</li> <li>Responsible: PSP2 (Enzo Menadel)  </li> <li>Due: April 15, 2025</li> </ul>"},{"location":"project/management/meetings/meeting_1/#topic-2-role-definition-and-collaborative-strategy","title":"Topic 2: Role Definition and Collaborative Strategy","text":"<p>Summary: Each team presented its focus area for the semester and aligned responsibilities:  </p> <ul> <li>PSP2: Will map the content creator\u2019s journey within the app using prior documentation and will produce 3 new courses.  </li> <li>PSP5: Will work on collecting and analyzing indicators from the previously developed courses.  </li> <li>Saxion: Will define the launch strategy for the app.  </li> <li>Software Team: Will consolidate technical documentation and develop an action plan for bug fixes.  </li> </ul> <p>An initial data collection effort will be launched across all teams. Each team will design a survey questionnaire based on their domain. These will be merged and refined collaboratively, then applied in the field to validate project goals.  </p> <p>Decision/Action Items:</p> <ol> <li> <p>Create draft questionnaire per team scope</p> <ul> <li>Responsible: All Teams</li> <li>Due: April 18, 2025  </li> </ul> </li> <li> <p>Merge and refine questionnaires  </p> <ul> <li>Responsible: PM &amp; SMs  </li> <li>Due: April 22, 2025  </li> </ul> </li> <li> <p>Conduct field data collection  </p> <ul> <li>Responsible: All Teams  </li> <li>Due: TO DEFINE</li> </ul> </li> <li> <p>Map content creator journey + produce 3 new courses  </p> <ul> <li>Responsible: PSP2 (Enzo Menadel)  </li> <li>Due: July 30, 2025  </li> </ul> </li> <li> <p>Collect and analyze indicators from existing courses  </p> <ul> <li>Responsible: PSP5 (Felipe Oliveira)  </li> <li>Due: July 30, 2025  </li> </ul> </li> <li> <p>Define go-to-market strategy  </p> <ul> <li>Responsible: Saxion Team  </li> <li>Due: June 04, 2025  </li> </ul> </li> <li> <p>Document the system and propose bug fix plan  </p> <ul> <li>Responsible: Software Team (Pedro Rodrigues)  </li> <li>Due: July 30, 2025</li> </ul> </li> </ol>"},{"location":"project/management/meetings/meeting_1/#5-next-steps-action-items","title":"5. Next Steps &amp; Action Items","text":"<ul> <li>Each team to deliver their questionnaire by April 18</li> <li>All surveys to be unified and revised by April 22  </li> <li>Field data collection to begin by (waiting visit date)</li> <li>Prepare cooperative visit agenda during the April 15 co-working session</li> </ul>"},{"location":"project/management/meetings/meeting_1/#6-next-meeting","title":"6. Next Meeting","text":"<p>Date: 04/15/2025 Time: 09:30 AM UTM-3  </p>"},{"location":"project/management/meetings/meeting_1/#7-closing","title":"7. Closing","text":"<p>Meeting adjourned at: 07:52 PM UTM-3</p> <p>Minutes prepared by: Lucas Antunes Date: 04/10/2025  </p>"},{"location":"project/management/meetings/meeting_1/#8-recording","title":"8. Recording","text":"<ul> <li>Youtube - Meeting 1</li> </ul>"},{"location":"project/product/mvp/","title":"Minimum Viable Product (MVP)","text":"<p>\u2190 Back to Main Page</p> <p>The Minimum Viable Product (MVP) represents the first functional version of the system that delivers core value to users while requiring minimal development effort. This document outlines the scope, features, and success criteria for the MVP phase.</p>"},{"location":"project/product/mvp/#mvp-goals","title":"MVP Goals","text":"<p>The MVP aims to:</p> Goal Description Deliver essential functionalities with minimal complexity Focus on core features that provide value to users. Validate core hypotheses and user needs Test the system with real users to ensure it meets their needs. Gather early feedback for iterative improvements Use feedback from users to guide future development. Provide a working foundation for future enhancements Build a stable base to expand upon in future versions."},{"location":"project/product/mvp/#mvp-scope","title":"MVP Scope","text":""},{"location":"project/product/mvp/#included-features","title":"Included Features","text":"<p>The MVP will include the following key functionalities:</p> Feature ID Feature Name Description Related Epic F-01 Scale Integration Measure and record weight via hardware. EP-01 F-02 API Data Sync Send weight data to the cloud in real-time. EP-02 F-03 User Authentication Secure login for different user roles. EP-05 F-04 Weight History Tracking Allow users to review past measurements. EP-03 F-05 Mobile Interface Provide a basic UI for users to interact. EP-03 F-06 Data Encryption Securely store and transmit collected data. EP-05"},{"location":"project/product/mvp/#excluded-features-for-future-releases","title":"Excluded Features (For Future Releases)","text":"<p>The following features are not included in the MVP but are planned for later iterations:</p> Feature Reason for Exclusion Multi-center management To be added in a future version. Advanced analytics and reporting Will be implemented after core functionalities. Offline mode for data collection Requires additional infrastructure. User notifications and alerts Not critical for MVP functionality. Customizable dashboard Future release after user feedback."},{"location":"project/product/mvp/#mvp-success-criteria","title":"MVP Success Criteria","text":"<p>The MVP will be considered successful if it meets the following criteria:</p> Criterion Description System Stability The core functionalities operate without critical bugs. Basic Usability Users can easily interact with the system. Data Accuracy Weight measurements are precise and reliably stored. Authentication Security User accounts are protected with authentication mechanisms. Real-Time Sync Weight data is transmitted to the cloud without significant delays. User Adoption At least [X]% of test users successfully complete key workflows."},{"location":"project/product/mvp/#next-steps","title":"Next Steps","text":"<p>Once the MVP is deployed, the next steps will include:</p> Step Description Gathering user feedback Collect insights from users for feature prioritization. Fixing bugs and improving usability Address issues and improve the user experience. Expanding features based on user needs Add features based on feedback and market demand. Planning Version 1.0 Use MVP insights to guide the development of Version 1.0."},{"location":"project/product/mvp/#conclusion","title":"Conclusion","text":"<p>The MVP serves as the foundation for product validation and further enhancements. By focusing on essential features, it allows for early testing, iteration, and user feedback collection before full-scale development.</p> <p>For updates on the MVP progress, refer to the Project Roadmap.</p>"},{"location":"project/product/mvp/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Topics 1.1, 1.2, 1.3, and 3 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and app type 09/09/2024 0.5 Technology adjustments <p>\u2190 Back to Main Page</p>"},{"location":"project/product/overview/","title":"Product Overview","text":"<p>\u2190 Back to Main Page</p>"},{"location":"project/product/overview/#product-description","title":"Product Description","text":"<p>The Educado is a cutting-edge gamified course system to address waste pickers. With this mission and user-centric design, Educado offers a seamless experience that aims to improve wasterpicker's quality of life learning in a light way.</p> <p>The system is currently under development, using modern technologies to ensure high scalability, security, and performance. Educado is being designed to support the waste picker community, whether the user is a waste picker, a university student, a professor, or an individual interested in contributing to this cause.</p>"},{"location":"project/product/overview/#core-features","title":"Core Features","text":"Feature Name Description Benefit/Value Feature 1 [Brief description of Feature 1] This feature allows users to [explain the value and function of the feature]. Feature 2 [Brief description of Feature 2] With this feature, users can [explain the benefit and how it solves a problem]. Feature 3 [Brief description of Feature 3] This feature enables users to [describe the problem it addresses and how it enhances user experience]. Feature 4 [Brief description of Feature 4] Aiming at [target audience], it helps users [explain what the feature achieves]."},{"location":"project/product/overview/#target-audience","title":"Target Audience","text":"<p>Educado is primarily aimed at:</p> Target Group Description Waste Pickers The main beneficiaries of the platform, receiving support in training, resources, and connection with support networks. University Students and Researchers Engaged in generating knowledge, developing solutions, and contributing to the social and technological growth of the initiative. Professors and Educators Collaborate through research, mentorship, and educational content to empower the waste picker community. Socially Engaged Citizens Individuals interested in volunteering, contributing content, or supporting the cause through civic engagement."},{"location":"project/product/overview/#benefits","title":"Benefits","text":"Benefit Description Scalability Our product is designed to grow with your business. Whether you're a startup or an enterprise, [Product Name] can scale to meet your needs without compromising performance. User-friendly Interface The intuitive design makes it easy for both technical and non-technical users to navigate the platform and get started right away. Security Built with the latest security protocols, [Product Name] ensures that your data is protected with end-to-end encryption and regular security updates. Customization The product offers flexible configurations, allowing users to tailor the platform to their specific requirements."},{"location":"project/product/overview/#technical-specifications","title":"Technical Specifications","text":"Attribute Details Platform Web-based application (with mobile app available on iOS/Android). Technology Stack Frontend: [Frontend technologies used, e.g., React, Vue.js]<code>&lt;br&gt;</code> Backend: [Backend technologies used, e.g., Node.js, Python] <code>&lt;br&gt;</code> Database: [Database technologies, e.g., PostgreSQL, MongoDB] <code>&lt;br&gt;</code> Hosting: [Hosting provider or architecture, e.g., AWS, Google Cloud] Supported Devices Desktop (Windows, macOS), Mobile (iOS, Android)"},{"location":"project/product/overview/#product-roadmap","title":"Product Roadmap","text":"Quarter Milestones Q1 Initial Launch: Full-feature release.<code>&lt;br&gt;</code> User onboarding and initial feedback collection. Q2 Feature Expansion: Enhanced reporting and analytics.<code>&lt;br&gt;</code> Mobile app improvements. Q3 Integration &amp; Automation: API integrations with popular platforms.<code>&lt;br&gt;</code> Workflow automation and advanced user settings. Q4 Enterprise Features: Enterprise-level scalability.<code>&lt;br&gt;</code> Additional security features and compliance updates."},{"location":"project/product/overview/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Topics 1.1, 1.2, 1.3, and 3 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and app type 09/09/2024 0.5 Technology adjustments <p>\u2190 Back to Main Page</p>"},{"location":"project/product/product-backlog-building/","title":"Product Backlog Building","text":"<p>\u2190 Back to Main Page</p>"},{"location":"project/product/product-backlog-building/#guide-to-reviewing-this-documentation","title":"Guide to Reviewing This Documentation","text":"<p>This document outlines the functional and non-functional requirements for the Data Management System, which integrates a hardware-connected scale, an API, and a mobile application. The documentation follows a structured approach to ensure clarity and completeness.</p>"},{"location":"project/product/product-backlog-building/#how-to-use-this-documentation","title":"How to Use This Documentation","text":"<ul> <li>Functional Requirements (FR-00) - The key capabilities the system must implement.</li> <li>Non-Functional Requirements (NFR-00) - The quality attributes ensuring system performance, security, and usability.</li> <li>Themes (TM-00) - High-level system areas grouping functionalities.</li> <li>Epics (EP-00) - Major features that contribute to the system\u2019s development.</li> <li>Capabilities (C-00) - The abilities the system must support.</li> <li>Features (F-00) - Specific technical functionalities fulfilling each capability.</li> <li>User Stories (US-00) - Individual use cases defining how users interact with the system.</li> <li>Backlog - A detailed, structured representation of all functionalities. (After have all topics, we can construct that)</li> </ul> <p>Each section follows a progressive breakdown of the system\u2019s structure, from high-level requirements to detailed functionalities. Nothing in this document is set in stone; if you notice an error, please discuss it with the team</p>"},{"location":"project/product/product-backlog-building/#1-functional-requirements","title":"1. Functional Requirements","text":"<p>Defines the system's core functionalities. What the system must do</p> FR-ID Description FR-01 The system must have an User Authentication System. FR-02 The system must have a User Managment System. FR-03 The system must have a Course Management System. FR-04 The system must have a Midia Management System."},{"location":"project/product/product-backlog-building/#2-non-functional-requirements","title":"2. Non-Functional Requirements","text":"<p>Specifies quality attributes that ensure the system meets expectations for performance, security, usability, scalability, etc...</p> NFR-ID Description SQuaRE Characteristic NFR-01 The system must be accessible via modern browsers (compatible with Chrome, Firefox, Safari, and Edge). Compatibility \u2013 Coexistence NFR-02 The system must ensure high availability, with at least 99% uptime. Reliability \u2013 Availability NFR-03 The system must guarantee data security, with encrypted authentication and protection against common attacks (e.g., SQL Injection, XSS). Security \u2013 Protection Against Attacks NFR-04 The system must have a response time of less than 2 seconds for 95% of requests. Performance Efficiency \u2013 Response Time NFR-05 The system must be horizontally scalable, allowing capacity increases as demand grows. Performance Efficiency \u2013 Behavior Under Load NFR-06 The system must be developed with clean, modular, and documented code. Maintainability \u2013 Analyzability NFR-07 The system must comply with LGPD (General Data Protection Law). Compliance \u2013 Regulatory NFR-08 The system must support responsive navigation, adapting to different screen sizes (mobile, tablet, desktop). Usability \u2013 Accessibility NFR-09 The system must provide adequate usability, following UX best practices (e.g., visual feedback, consistency, clear navigation). Usability \u2013 Operability NFR-10 The system must allow data backup and restoration at defined intervals. Reliability \u2013 Recoverability"},{"location":"project/product/product-backlog-building/#3-themes","title":"3. Themes","text":"<p>Themes categorize major system areas, grouping functionalities under broad topics.</p> FR-ID TH-ID Theme Description FR-01 TH-01 User Authentication and Session Management Manage login, logout, and session persistence securely. FR-01 TH-02 Access Control and Security Policies Define and enforce user permissions, roles, and access restrictions. FR-02 TH-03 User Profile and Role Management Handle user registration, profile editing, and role assignments. FR-02 TH-04 User Search and Account Control Enable filtering, listing, and controlling user account statuses. FR-03 TH-05 Course Creation and Content Management Allow creation and management of courses, modules, and educational content. FR-03 TH-06 Course Enrollment and Progress Tracking Handle enrollment processes and monitor user progress in courses. FR-04 TH-07 Media Upload and Categorization Support uploading, organizing, and tagging various media types. FR-04 TH-08 Media Use and Integration in Courses Enable embedding and linking media within course content."},{"location":"project/product/product-backlog-building/#4-epics","title":"4. Epics","text":"<p>Epics define high-level features that contribute to system development.</p> FR-ID Theme-ID Epic-ID Epic Description FR-01 TH-01 EP-01 User Login and Registration Develop secure login, logout, and registration mechanisms. FR-01 TH-01 EP-02 Session Lifecycle Management Handle token issuance, refresh, and session expiration. FR-01 TH-02 EP-03 Password and Identity Recovery Implement recovery mechanisms like password reset and email confirmation. FR-01 TH-02 EP-04 Multi-Factor Authentication (MFA) Add additional layers of authentication for security. FR-02 TH-03 EP-05 User Profile CRUD Allow full editing and visualization of user data. FR-02 TH-03 EP-06 Role Assignment System Define and assign roles such as Admin, Instructor, and Student. FR-02 TH-04 EP-07 Account Status Management Enable account activation, deactivation, and suspension. FR-02 TH-04 EP-08 Advanced User Filtering Implement filtering by name, email, role, and status. FR-03 TH-05 EP-09 Course CRUD Enable creation, update, and removal of course structures. FR-03 TH-05 EP-10 Lesson and Module Design Allow modular content within each course. FR-03 TH-06 EP-11 Enrollment Control Allow enrollment, cancellation, and waiting list handling. FR-03 TH-06 EP-12 Progress Tracking Provide visual indicators of user course progress. FR-04 TH-07 EP-13 File Upload Engine Enable media upload in various formats (images, audio, video, PDFs). FR-04 TH-07 EP-14 Media Classification System Categorize media by type, topic, and course relevance. FR-04 TH-08 EP-15 Media Permissions and Access Define who can view, reuse, or download media content. FR-04 TH-08 EP-16 Media Embedding in Courses Enable reuse of uploaded media inside course content. FR-01 TH-02 EP-17 Access Logs and Audit Trail Track all user access and security-related events. FR-03 TH-06 EP-18 Certificate Issuance System Automatically generate certificates after course completion. FR-02 TH-03 EP-19 Profile Picture and Personal Info Add support for profile pictures and extended metadata. FR-04 TH-08 EP-20 Media Preview and Playback Allow safe preview of media before downloading or embedding."},{"location":"project/product/product-backlog-building/#above-here-we-do-have-semantic-context-just-structure-pattern","title":"Above here, we do have semantic context, just structure pattern","text":""},{"location":"project/product/product-backlog-building/#5-capabilities","title":"5. Capabilities","text":"<p>Capabilities describe the system's technical abilities to support key functionalities.</p> # Capability Description C-01 Weight Measurement Accurately measure weight using the scale prototype. C-02 Real-Time Data Processing Process weight data with minimal latency. C-03 Secure API Access Ensure authentication and authorization for API access. C-04 Mobile User Interface Provide an intuitive mobile interface for waste pickers. C-05 Multi-Center Support Allow multiple cooperative centers to use the system. C-06 Environmental Resilience Ensure scale durability in dust, moisture, and impact conditions. C-07 Data Storage &amp; Retrieval Store and retrieve weight data efficiently. C-08 Compliance with Guidelines Follow best practices from the implementation guide. <p>(Additional capabilities \u2026)</p>"},{"location":"project/product/product-backlog-building/#6-features","title":"6. Features","text":"<p>Features define the specific functionalities required to implement each capability.</p> # Feature Description F-01 Scale Data Transmission Transmit weight data from the scale to the API. F-02 Mobile Weight Display Display real-time weight data on the mobile app. F-03 User Authentication Secure login system for API and app users. F-04 Offline Mode Enable mobile app functionality without an internet connection. F-05 Multi-Center Management Manage users and operations across multiple cooperative centers. F-06 API Logging &amp; Monitoring Track API requests and performance metrics. F-07 Data Export Allow users to export collected data in CSV or JSON formats. F-08 UI Accessibility Enhancements Ensure the app is accessible for users with low digital literacy. <p>(Additional features \u2026)</p>"},{"location":"project/product/product-backlog-building/#7-user-stories","title":"7. User Stories","text":"<p>User stories describe how different users interact with the system, providing real-world scenarios.</p> # Description US-01 As a scale operator, I want the equipment to perform precise measurements to avoid weighing errors. US-02 As a scale operator, I want the equipment to have a digital display to view the weight before confirmation. US-03 As an administrator, I want the scale to be resistant to adverse environmental conditions (dust, moisture, impact) for greater durability. US-04 As a scale operator, I want the system to notify me if the scale is uncalibrated to ensure accuracy. US-05 As an administrator, I want to configure different weighing modes in the system to meet operational needs. <p>(Additional user stories \u2026)</p>"},{"location":"project/product/product-backlog-building/#8-backlog","title":"8. Backlog","text":"<p>O backlog do projeto \u00e9 uma lista abrangente de todas as tarefas, funcionalidades e melhorias planejadas para o aplicativo. Ele serve como uma refer\u00eancia central para o que precisa ser desenvolvido, permitindo que a equipe de desenvolvimento tenha uma vis\u00e3o clara do escopo do projeto. Al\u00e9m disso, funciona como uma lista de funcionalidades que ser\u00e3o priorizadas e selecionadas para o escopo do MVP.</p> Tema \u00c9pico Capacidades Features User Story Descri\u00e7\u00e3o TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F01 Registro de M\u00e9dicos e Administradores US01 Como m\u00e9dico, eu gostaria de me registrar no sistema para ter credenciais de acesso TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F05 Login de M\u00e9dicos e Administradores US02 Como m\u00e9dico, eu gostaria de realizar login no sistema para ter acesso ao conte\u00fado da plataforma TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F05 Login de M\u00e9dicos e Administradores US03 Como administrador, eu gostaria de realizar login no sistema para ter acesso \u00e0s funcionalidades de gest\u00e3o TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F04 Edi\u00e7\u00e3o de Perfil de Usu\u00e1rio US04 Como usu\u00e1rio (m\u00e9dico ou administrador), eu gostaria de redefinir a minha senha para recuperar as credenciais de acesso TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F04 Edi\u00e7\u00e3o de Perfil de Usu\u00e1rio US05 Como usu\u00e1rio (m\u00e9dico ou administrador), eu gostaria de editar o meu perfil para atualizar as informa\u00e7\u00f5es cadastradas TM01 EP02 Assinatura e Notifica\u00e7\u00f5es C04 Gerenciamento de Finan\u00e7as F12 Gerenciamento de Assinatura US06 Como m\u00e9dico, eu gostaria de acessar \u00e1rea de finan\u00e7as para gerenciar assinatura TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F01 Registro de M\u00e9dicos e Administradores US07 Como administrador, eu gostaria de criar outras contas administrador para auxiliar na gest\u00e3o TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F02 Pesquisa e Listagem de Usu\u00e1rios US08 Como administrador, eu gostaria de listar usu\u00e1rios para visualizar os usu\u00e1rios cadastrados TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F03 Edi\u00e7\u00e3o e Exclus\u00e3o de Usu\u00e1rios US09 Como administrador, eu gostaria de editar um usu\u00e1rio para corrigir eventuais erros de cadastro TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F03 Edi\u00e7\u00e3o e Exclus\u00e3o de Usu\u00e1rios US10 Como administrador, eu gostaria de excluir um usu\u00e1rio para retirar eventuais cadastros indevidos TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C01 Gerenciamento de Usu\u00e1rios F02 Pesquisa e Listagem de Usu\u00e1rios US11 Como administrador, eu gostaria de pesquisar um usu\u00e1rio espec\u00edfico para encontr\u00e1-lo com mais facilidade TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C02 Gerenciamento de Conte\u00fados F06 Cria\u00e7\u00e3o e Listagem de Documentos US12 Como administrador, eu gostaria de criar um documento para adicionar novo material TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C02 Gerenciamento de Conte\u00fados F06 Cria\u00e7\u00e3o e Listagem de Documentos US13 Como administrador, eu gostaria de listar documentos para visualizar materiais cadastrados TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C02 Gerenciamento de Conte\u00fados F07 Edi\u00e7\u00e3o e Exclus\u00e3o de Documentos US14 Como administrador, eu gostaria de editar um documento para atualizar um material TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C02 Gerenciamento de Conte\u00fados F07 Edi\u00e7\u00e3o e Exclus\u00e3o de Documentos US15 Como administrador, eu gostaria de excluir um documento para remover material defasado TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C02 Gerenciamento de Conte\u00fados F06 Cria\u00e7\u00e3o e Listagem de Documentos US16 Como administrador, eu gostaria de criar um assunto para complementar um documento j\u00e1 cadastrado TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C02 Gerenciamento de Conte\u00fados F06 Cria\u00e7\u00e3o e Listagem de Documentos US17 Como administrador, eu gostaria de listar assuntos para visualizar os assuntos cadastrados em um documento TM01 EP01 Gest\u00e3o de Conte\u00fados e Usu\u00e1rios C02 Gerenciamento de Conte\u00fados F07 Edi\u00e7\u00e3o e Exclus\u00e3o de Documentos US18 Como administrador, eu gostaria de editar um assunto para atualizar o material"},{"location":"project/product/product-backlog-building/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Topics 1.1, 1.2, 1.3, and 3 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and app type 09/09/2024 0.5 Technology adjustments <p>\u2190 Back to Main Page</p>"},{"location":"project/vision-objectives/objectives/","title":"Project Objectives","text":""},{"location":"project/vision-objectives/objectives/#1-overview","title":"1. Overview","text":"<p>\u2190 Back to the Main Page</p> <p>The primary objective of this project is to develop a real-time monitoring system capable of detecting anomalies and potential failures in large-scale server infrastructures. The system will use machine learning algorithms to identify unusual patterns in server performance metrics, which may indicate potential failures or security threats. By implementing this system, we aim to enhance the reliability and availability of enterprise IT systems and reduce the time to detect and respond to issues.</p>"},{"location":"project/vision-objectives/objectives/#2-general-objectives","title":"2. General Objectives","text":"<p>The project seeks to achieve the following general goals:</p> Objective Description Scalable monitoring platform Develop a platform capable of tracking real-time server performance metrics (e.g., CPU usage, memory usage, network traffic). Machine learning models Implement models to analyze historical and real-time data to predict hardware failures and detect performance anomalies. Seamless integration Ensure integration with existing IT infrastructure and monitoring tools likeNagios , Zabbix , and Prometheus . Robust alerting system Create a system to notify system administrators of detected anomalies or potential failures. Dashboard interface Provide a user interface for visualizing the real-time status of servers and system components."},{"location":"project/vision-objectives/objectives/#3-specific-objectives","title":"3. Specific Objectives","text":"<p>To meet the general objectives, the project will focus on the following specific tasks:</p>"},{"location":"project/vision-objectives/objectives/#research-algorithm-development","title":"Research &amp; Algorithm Development","text":"Task Description Literature review Conduct a review of anomaly detection techniques, focusing on time-series data analysis and unsupervised learning algorithms (e.g., k-means clustering, autoencoders). Data preprocessing Implement pipelines to clean and normalize raw server performance data (e.g., handling missing values, outliers, and normalization). Machine learning model training Train models to detect performance anomalies by analyzing server metrics in real time, evaluated based on precision, recall, and F1-score."},{"location":"project/vision-objectives/objectives/#system-design-integration","title":"System Design &amp; Integration","text":"Task Description Architecture design Design the platform using a microservices architecture, with services for data collection, anomaly detection, and alert management. API layer implementation Implement an API layer to integrate with external monitoring tools and support data retrieval and alerts. Logging system Develop a centralized logging system to collect and analyze logs from multiple servers for further anomaly detection."},{"location":"project/vision-objectives/objectives/#alerting-visualization","title":"Alerting &amp; Visualization","text":"Task Description Real-time alert system Design and implement a system using WebSocket and Push Notifications to notify administrators of detected anomalies. Dashboard interface Create an interactive dashboard using React and D3.js to visualize server health, metrics trends, and real-time alerts. Alert customization Enable administrators to customize alert thresholds and notification preferences via the user interface."},{"location":"project/vision-objectives/objectives/#4-expected-outcomes","title":"4. Expected Outcomes","text":"<p>By the end of the project, we expect the following deliverables and outcomes:</p> Deliverable Description Monitoring platform A fully functional platform capable of tracking multiple servers in real time and providing actionable insights into server performance and health. Machine learning models Models that predict server failures or performance degradation with at least 85% accuracy. Dashboard interface An interface providing clear visualizations of server health and performance metrics, enabling quick, informed decisions. Alerting system A robust alerting system integrated with email, SMS, and Slack, ensuring prompt responses to critical incidents. API documentation Comprehensive documentation for external integrations and scalability."},{"location":"project/vision-objectives/objectives/#5-long-term-objectives","title":"5. Long-Term Objectives","text":"<p>In the long term, the project aims to:</p> Objective Description Expand capabilities Extend the platform to monitor additional infrastructure components (e.g., databases, network devices, virtual machines). Advanced analytics Integrate trend forecasting and capacity planning for proactive infrastructure management. Cross-platform deployment Support deployments across on-premises, cloud-based, and hybrid environments."},{"location":"project/vision-objectives/objectives/#technical-focus","title":"Technical Focus","text":"<p>The system will leverage a combination of cutting-edge technologies:</p> Component Technologies Backend Python (Flask/FastAPI), Docker, Kubernetes, Celery Machine Learning Scikit-learn, TensorFlow Frontend React.js, D3.js Database PostgreSQL, MongoDB"},{"location":"project/vision-objectives/objectives/#success-criteria","title":"Success Criteria","text":"Criteria Description Anomaly detection Real-time anomaly detection with a false positive rate of less than 5%. Scalability Ability to handle up to 1,000 servers in a distributed environment. Alert system A highly responsive alerting system with less than 1-minute delay from anomaly detection to alert generation. <p>\u2190 Back to the Main Page</p>"},{"location":"project/vision-objectives/vision/","title":"Project Vision","text":"<p>\u2190 Back to the Main Page</p>"},{"location":"project/vision-objectives/vision/#vision-statement","title":"Vision Statement","text":"<p>Our vision is to redefine the way people engage with education in the digital age. We aim to create an intelligent, scalable, and accessible platform that empowers learners worldwide to acquire new skills, deepen their knowledge, and transform their careers, no matter where they are.</p> <p>By integrating personalized learning paths, cutting-edge AI recommendations, and a community-driven environment, our platform will provide students with an immersive and adaptive educational experience. We envision a space where learning is not limited by geography, traditional schedules, or rigid curricula, but instead is flexible, dynamic, and driven by the learner\u2019s needs and interests.</p> <p>Our platform will cater to individuals, organizations, and educational institutions, offering tools to track progress, measure success, and unlock opportunities for career advancement. Through collaboration with leading educators and content creators, we will ensure high-quality learning experiences that are up-to-date and relevant to the rapidly evolving job market.</p> <p>In the long run, we aim to be the global leader in online education, creating a future where education is personalized, accessible to all, and an ongoing part of people\u2019s lifelong journey toward self-improvement and success.</p> <p>Our platform will not only shape the future of education but also democratize learning, breaking down barriers and unlocking opportunities for millions of people around the world.</p>"},{"location":"project/vision-objectives/vision/#key-elements","title":"Key Elements","text":"Element Description Accessibility The platform will ensure education is accessible to anyone, anywhere. Personalization AI-driven learning paths tailored to each individual's needs. Innovation Cutting-edge technology for adaptive learning experiences. Global Impact Democratizing education to provide opportunities for all. Collaboration Partnering with educators, content creators, and industry leaders to provide the best resources."},{"location":"project/vision-objectives/vision/#long-term-goals","title":"Long-term Goals","text":"Goal Description Become a global leader in online education Transform the way education is delivered worldwide. Improve learning outcomes Deliver personalized learning experiences that lead to real-world success. Support lifelong learning Provide ongoing opportunities for growth and career advancement. Foster inclusion Break down barriers to education and empower all learners."},{"location":"project/vision-objectives/vision/#revision-history","title":"Revision History","text":"Date Version Changes Authors 02/04/2024 0.1 Document creation 06/04/2024 0.2 Topics 1.1, 1.2, 1.3, and 3 16/04/2024 0.3 Documentation on Git Pages 09/09/2024 0.4 Updated technologies and app type 09/09/2024 0.5 Technology adjustments <p>\u2190 Back to the Main Page</p>"},{"location":"setup/mkdocs-configuration/","title":"MkDocs Configuration Guide","text":""},{"location":"setup/mkdocs-configuration/#basic-configuration","title":"Basic Configuration","text":"<p>The <code>mkdocs.yml</code> file is the configuration file for your MkDocs project. Here's an example configuration:</p> <pre><code>   site_name: Meu Projeto Docs\n   nav:\n     - Home: index.md\n     - About: about.md\n   theme: readthedocs\n</code></pre> <ul> <li><code>site_name</code> : The name of your documentation site.</li> <li><code>nav</code> : Defines the navigation menu. Each item links to a Markdown file.</li> <li><code>theme</code> : Specifies the theme to use. Popular themes include <code>readthedocs</code> and <code>material</code>.</li> </ul>"},{"location":"setup/mkdocs-configuration/#2-customizing-the-theme","title":"2. Customizing the Theme","text":"<p>To use the <code>mkdocs-material</code> theme, install it first:</p> <p>bash</p> <pre><code>   pip install mkdocs-material\n</code></pre> <p>Then, update the <code>mkdocs.yml</code> file:</p> <p>yaml</p> <pre><code>   theme:\n     name: material\n</code></pre> <p>The <code>material</code> theme offers many customization options, such as changing colors, fonts, and adding a logo. For example:</p> <p>yaml</p> <pre><code>   theme:\n     name: material\n     palette:\n       primary: indigo\n       accent: teal\n     logo: assets/logo.png\n</code></pre>"},{"location":"setup/mkdocs-configuration/#3-adding-plugins","title":"3. Adding Plugins","text":"<p>MkDocs supports plugins for additional functionality. For example, to add a search plugin:</p> <p>yaml</p> <pre><code>   plugins:\n     - search\n</code></pre> <p>Other popular plugins include:</p> <ul> <li><code>mkdocs-minify-plugin</code> : Minifies HTML, CSS, and JS files.</li> <li><code>mkdocs-git-revision-date-plugin</code> : Adds the last updated date to your pages.</li> </ul> <p>To install a plugin, use <code>pip</code>. For example:</p> <p>bash</p> <pre><code>   pip install mkdocs-minify-plugin\n</code></pre> <p>Then, add it to the <code>mkdocs.yml</code> file:</p> <p>yaml</p> <pre><code>   plugins:\n     - search\n     - minify\n</code></pre>"},{"location":"setup/mkdocs-configuration/#4-versioning-documentation","title":"4. Versioning Documentation","text":"<p>Use the <code>mike</code> plugin to version your documentation:</p> <ol> <li>Install <code>mike</code>:</li> </ol> <p>bash</p> <pre><code>   pip install mike\n</code></pre> <ol> <li>Deploy a version:</li> </ol> <p>bash</p> <pre><code>   mike deploy 1.0\n</code></pre> <ol> <li>Access the versioned documentation at:</li> </ol> <pre><code>   https://&lt;your-username&gt;.github.io/&lt;your-repo&gt;/1.0/\n</code></pre> <p>To deploy multiple versions, repeat the process:</p> <p>bash</p> <pre><code>   mike deploy 2.0\n</code></pre> <p>You can also set a default version:</p> <p>bash</p> <pre><code>   mike set-default 1.0\n</code></pre>"},{"location":"setup/mkdocs-configuration/#5-customizing-the-navigation","title":"5. Customizing the Navigation","text":"<p>The <code>nav</code> section in <code>mkdocs.yml</code> controls the structure of your documentation. For example:</p> <p>yaml</p> <pre><code>   nav:\n     - Home: index.md\n     - Getting Started:\n       - Installation: getting-started/installation.md\n       - Configuration: getting-started/configuration.md\n     - Advanced Topics:\n       - Plugins: advanced/plugins.md\n       - Theming: advanced/theming.md\n</code></pre> <p>This creates a nested navigation menu with sections and subpages.</p>"},{"location":"setup/mkdocs-configuration/#6-adding-extras","title":"6. Adding Extras","text":"<ul> <li>Favicon: Add a favicon to your site by placing a <code>favicon.ico</code> file in the <code>docs/</code> folder and referencing it in <code>mkdocs.yml</code>:</li> </ul> <p>yaml</p> <pre><code>   extra:\n     favicon: assets/favicon.ico\n</code></pre> <ul> <li>Analytics: Add Google Analytics by including your tracking ID:</li> </ul> <p>yaml</p> <pre><code>   extra:\n     analytics:\n       provider: google\n       property: UA-XXXXX-Y\n</code></pre>"},{"location":"setup/mkdocs-setup/","title":"MkDocs Setup Guide","text":""},{"location":"setup/mkdocs-setup/#what-is-mkdocs","title":"What is MkDocs?","text":"<p>MkDocs is a static site generator designed for project documentation. It uses Markdown for content and YAML for configuration. It's simple, fast, and perfect for creating beautiful documentation.</p>"},{"location":"setup/mkdocs-setup/#1-install-mkdocs","title":"1. Install MkDocs","text":"<p>Make sure you have Python installed and a virtual environment set up (see the Python Virtual Environment Setup Guide). Then, install MkDocs using <code>pip</code>:</p> <pre><code>   pip install mkdocs\n</code></pre>"},{"location":"setup/mkdocs-setup/#2-create-a-new-project","title":"2. Create a New Project","text":"<p>To create a new MkDocs project, run the following command:</p> <p>bash</p> <pre><code>   mkdocs new meu-projeto-docs\n</code></pre> <p>This will create a folder named <code>meu-projeto-docs</code> with the following structure:</p> <p>meu-projeto-docs/</p> <ul> <li><code>docs/</code> : This folder contains the Markdown files for your documentation.</li> <li><code>mkdocs.yml</code> : This is the configuration file for your MkDocs project.</li> </ul>"},{"location":"setup/mkdocs-setup/#3-add-content","title":"3. Add Content","text":"<p>Add Markdown files to the <code>docs/</code> folder to create your documentation. For example:</p>"},{"location":"setup/mkdocs-setup/#docsindexmd","title":"<code>docs/index.md</code>","text":"<p>markdown</p> <pre><code>   # Welcome to My Project Docs\n\n   This is the homepage of the project documentation.\n</code></pre>"},{"location":"setup/mkdocs-setup/#docsaboutmd","title":"<code>docs/about.md</code>","text":"<p>markdown</p> <p># About the Project</p>"},{"location":"setup/mkdocs-setup/#4-edit-the-configuration-file","title":"4. Edit the Configuration File","text":"<p>Open the <code>mkdocs.yml</code> file and customize it. Here's an example configuration:</p> <p>yaml</p> <p>site_name: Meu Projeto Docs</p> <ul> <li><code>site_name</code> : The name of your documentation site.</li> <li><code>nav</code> : Defines the navigation menu. Each item links to a Markdown file.</li> <li><code>theme</code> : Specifies the theme to use. Popular themes include <code>readthedocs</code> and <code>material</code>.</li> </ul>"},{"location":"setup/mkdocs-setup/#5-preview-locally","title":"5. Preview Locally","text":"<p>To preview your documentation locally, run:</p> <p>bash</p> <p>mkdocs serve</p> <p>This will start a local development server. Access the documentation in your browser at:</p> <p>http://127.0.0.1:8000</p> <p>Any changes you make to the Markdown files or configuration will be automatically reflected in the browser.</p>"},{"location":"setup/mkdocs-setup/#6-build-the-site","title":"6. Build the Site","text":"<p>When you're ready to generate the static site, run:</p> <p>bash</p> <p>mkdocs build</p> <p>This will create a <code>site/</code> folder containing the HTML, CSS, and JavaScript files for your documentation.</p>"},{"location":"setup/publishing-guide/","title":"Publishing Documentation to GitHub Pages","text":""},{"location":"setup/publishing-guide/#steps-to-publish","title":"Steps to Publish","text":""},{"location":"setup/publishing-guide/#1-install-the-gh-deploy-plugin","title":"1. Install the <code>gh-deploy</code> Plugin","text":"<p>The <code>gh-deploy</code> command is included by default with MkDocs. Ensure MkDocs is installed and your virtual environment is activated.</p> <p>If you haven't installed MkDocs yet, run:</p> <pre><code>   pip install mkdocs\n</code></pre>"},{"location":"setup/publishing-guide/#2-deploy-to-github-pages","title":"2. Deploy to GitHub Pages","text":"<p>To publish your documentation, run the following command:</p> <p>bash</p> <pre><code>   mkdocs gh-deploy\n</code></pre> <p>This will:</p> <ul> <li>Build the site.</li> <li>Push the contents of the <code>site/</code> folder to the <code>gh-pages</code> branch of your repository.</li> </ul>"},{"location":"setup/publishing-guide/#3-access-your-documentation","title":"3. Access Your Documentation","text":"<p>Your documentation will be available at:</p> <pre><code>   https://&lt;your-username&gt;.github.io/&lt;your-repo&gt;/\n</code></pre> <p>Replace <code>&lt;your-username&gt;</code> with your GitHub username and <code>&lt;your-repo&gt;</code> with the name of your repository.</p>"},{"location":"setup/publishing-guide/#4-automating-deployment-with-github-actions","title":"4. Automating Deployment with GitHub Actions","text":"<p>To automate the deployment process, create a GitHub Actions workflow:</p> <ol> <li>Create a <code>.github/workflows/</code> directory in your repository:</li> </ol> <p>bash</p> <pre><code>   mkdir -p .github/workflows/\n</code></pre> <ol> <li>Create a file named <code>deploy.yml</code> in the <code>.github/workflows/</code> directory:</li> </ol> <p>yaml</p> <pre><code>   name: Deploy Docs\n   on:\n     push:\n       branches:\n         - main\n   jobs:\n     deploy:\n       runs-on: ubuntu-latest\n       steps:\n         - uses: actions/checkout@v2\n         - name: Set up Python\n           uses: actions/setup-python@v2\n           with:\n             python-version: 3.x\n         - name: Install dependencies\n           run: pip install mkdocs mkdocs-material\n         - name: Deploy to GitHub Pages\n           run: mkdocs gh-deploy --force\n</code></pre> <p>This workflow will automatically build and deploy your documentation whenever you push changes to the <code>main</code> branch.</p>"},{"location":"setup/publishing-guide/#5-custom-domain-optional","title":"5. Custom Domain (Optional)","text":"<p>If you want to use a custom domain for your documentation:</p> <ol> <li>Create a file named <code>CNAME</code> in the <code>docs/</code> folder with your custom domain:</li> </ol> <pre><code>   docs.example.com\n</code></pre> <ol> <li>Add the <code>CNAME</code> file to your <code>mkdocs.yml</code>:</li> </ol> <p>yaml</p> <pre><code>   extra:\n     CNAME: docs.example.com\n</code></pre> <ol> <li>Configure your DNS settings to point to GitHub Pages. Follow the GitHub Pages guide for detailed instructions.</li> </ol>"},{"location":"setup/python-venv-setup/","title":"Python Virtual Environment Setup","text":""},{"location":"setup/python-venv-setup/#why-use-a-virtual-environment","title":"Why Use a Virtual Environment?","text":"<p>A virtual environment allows you to manage dependencies for your project in an isolated environment, avoiding conflicts with other projects. It ensures that the packages you install are specific to the project and do not interfere with your global Python installation.</p>"},{"location":"setup/python-venv-setup/#steps-to-set-up-a-virtual-environment","title":"Steps to Set Up a Virtual Environment","text":""},{"location":"setup/python-venv-setup/#1-install-python","title":"1. Install Python","text":"<p>Make sure Python is installed on your system. You can download it from the official website: python.org.</p> <p>To check if Python is already installed, run:</p> <pre><code>   python --version\n</code></pre>"},{"location":"setup/python-venv-setup/#2-activate-the-virtual-environment","title":"2. Activate the Virtual Environment","text":"<p>To start using the virtual environment, you need to activate it.</p> <ul> <li>On Windows:</li> </ul> <p><code>bash   venv\\Scripts\\activate</code> - On macOS/Linux:</p> <p><code>bash   source venv/Scripts/activate</code></p> <p>Once activated, your terminal prompt will change to show the name of the virtual environment (e.g., <code>(venv)</code>).</p>"},{"location":"setup/python-venv-setup/#3-install-dependencies","title":"3. Install Dependencies","text":"<p>With the virtual environment activated, you can install the required packages using <code>pip</code>. For example, to install MkDocs:</p> <pre><code>   pip install mkdocs\n</code></pre> <p>You can also install multiple packages at once by listing them:</p> <pre><code>   pip install mkdocs mkdocs-material\n</code></pre>"},{"location":"setup/python-venv-setup/#4-deactivate-the-virtual-environment","title":"4. Deactivate the Virtual Environment","text":"<p>When you're done working in the virtual environment, you can deactivate it by running:</p> <pre><code>   deactivate\n</code></pre> <p>This will return you to the global Python environment.</p>"},{"location":"setup/readme/","title":"Documentation Setup Guide","text":"<p>Welcome to the <code>docs-setup</code> folder! This folder contains all the necessary guides to set up and configure your project documentation using MkDocs.</p>"},{"location":"setup/readme/#guides","title":"Guides","text":""},{"location":"setup/readme/#1-python-virtual-environment-setup","title":"1. Python Virtual Environment Setup","text":"<p>Learn how to set up a Python virtual environment for dependency management.</p> <ul> <li>View Guide</li> </ul>"},{"location":"setup/readme/#2-mkdocs-setup","title":"2. MkDocs Setup","text":"<p>Step-by-step instructions to install and configure MkDocs.</p> <ul> <li>View Guide</li> </ul>"},{"location":"setup/readme/#3-mkdocs-configuration","title":"3. MkDocs Configuration","text":"<p>Customize your MkDocs project with themes, plugins, and versioning.</p> <ul> <li>View Guide</li> </ul>"},{"location":"setup/readme/#4-publishing-guide","title":"4. Publishing Guide","text":"<p>Publish your documentation to GitHub Pages and automate the process with GitHub Actions.</p> <ul> <li>View Guide</li> </ul>"},{"location":"setup/readme/#quick-start","title":"Quick Start","text":"<ol> <li>Set up a Python virtual environment:</li> </ol> <pre><code>   python -m venv venv\n</code></pre> <ol> <li>Activate the virtual environment:</li> <li>On Windows:</li> </ol> <p>bash</p> <pre><code>   venv\\Scripts\\activate\n</code></pre> <ul> <li>On macOS/Linux:</li> </ul> <p>bash</p> <pre><code>   source venv/bin/activate\n</code></pre> <ol> <li>Install MkDocs:</li> </ol> <p>bash</p> <pre><code>   pip install mkdocs\n</code></pre> <ol> <li>Create a new MkDocs project:</li> </ol> <p>bash</p> <pre><code>   mkdocs new meu-projeto-docs\n</code></pre> <ol> <li>Preview your documentation locally:</li> </ol> <p>bash</p> <pre><code>   mkdocs serve\n</code></pre> <ol> <li>Publish your documentation to GitHub Pages:</li> </ol> <p>bash</p> <pre><code>   mkdocs gh-deploy\n</code></pre>"},{"location":"setup/readme/#license","title":"License","text":"<p>This project is licensed under the  GNU General Public License v3.0 (GPL-3.0) . For more details, see the LICENSE file.</p>"},{"location":"setup/readme/#contributing","title":"Contributing","text":"<p>If you would like to contribute to this project, please read the contribution guide for more details.</p>"},{"location":"setup/readme/#support","title":"Support","text":"<p>For questions or issues, please open an issue in the GitHub repository.</p>"}]}